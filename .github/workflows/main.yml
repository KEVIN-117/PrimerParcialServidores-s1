name: CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  MONGO_DATABASE: books-db
  DOCKER_USERNAME: kevin117rodriguez
  DOCKER_TAG: kevin117rodriguez/appimage

jobs:
  init_db:
    runs-on: self-hosted
    steps:
      - name: Run db
        run: echo "DB started"
      - name: Remove db
        run: |
            docker stop $MONGO_DATABASE
            docker rm $MONGO_DATABASE
            echo "DB removed"
      - name: Run
        run: docker run --name books-db -p 27017:27017 -e MONGO_INITDB_DATABASE=$MONGO_DATABASE -d mongo:latest
      - name: Init DB
        run: |
            docker ps
            echo "DB initialized"
  build:
    runs-on: self-hosted
    needs: init_db
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy image to docker hub
        run: |
            echo "Initial setup"
            cat ~/credentials.txt | docker login --username $DOCKER_USERNAME --password-stdin
            docker build -t $DOCKER_TAG .
            docker tag $DOCKER_TAG $DOCKER_TAG
            docker push $DOCKER_TAG
  test:
    runs-on: self-hosted
    needs: [init_db, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: echo "Tests passed"
  deploy:
    runs-on: self-hosted
    needs: [build, test, init_db]
    env:
      DOCKER_CONTAINER: app-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy
        run: |
            echo "Deploying"
            docker pull $DOCKER_TAG
            if [ "$(docker ps -q -f name=$DOCKER_CONTAINER)" ]; then
                docker stop $DOCKER_CONTAINER
                docker rm $DOCKER_CONTAINER
            fi
            docker run --name $DOCKER_CONTAINER -e PORT=3000 -e DB_HOST=192.168.152.134 -e DB_PORT=27017 -e DB_NAME=books-db -p 3000:3000 $DOCKER_TAG
            docker ps
            echo "Deployed"
